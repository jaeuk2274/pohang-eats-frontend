[{"T:\\vsCodeProject\\pohang-eats-frontend\\src\\index.tsx":"1","T:\\vsCodeProject\\pohang-eats-frontend\\src\\routers\\logged-in-router.tsx":"2","T:\\vsCodeProject\\pohang-eats-frontend\\src\\reportWebVitals.ts":"3","T:\\vsCodeProject\\pohang-eats-frontend\\src\\routers\\logged-out-router.tsx":"4"},{"size":672,"mtime":1610501939828,"results":"5","hashOfConfig":"6"},{"size":235,"mtime":1610501939838,"results":"7","hashOfConfig":"6"},{"size":440,"mtime":1610501939834,"results":"8","hashOfConfig":"6"},{"size":1596,"mtime":1610503640720,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hc8ekh",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"T:\\vsCodeProject\\pohang-eats-frontend\\src\\index.tsx",[],"T:\\vsCodeProject\\pohang-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"T:\\vsCodeProject\\pohang-eats-frontend\\src\\reportWebVitals.ts",[],"T:\\vsCodeProject\\pohang-eats-frontend\\src\\routers\\logged-out-router.tsx",["19"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { isLoggedInVar } from \"../apollo\";\r\n\r\ninterface IForm {\r\n    email: string;\r\n    password: string;\r\n  }  \r\n\r\nexport const LoggedOutRouter = () => {\r\n    const { register, watch, handleSubmit, errors } = useForm<IForm>();\r\n    const onSubmit = () => {\r\n      console.log(watch());\r\n    };\r\n    const onInvalid = () => {\r\n      console.log(\"cant create account\");\r\n    };\r\n    console.log(\"errors\", errors);\r\n    return (\r\n      <div>\r\n        <h1>Logged Out</h1>\r\n        <form onSubmit={handleSubmit(onSubmit, onInvalid)}>\r\n          <div>\r\n            <input\r\n              ref={register({\r\n                required: \"This is required\",\r\n                pattern: /^[A-Za-z0-9._%+-]+@gmail.com$/,\r\n              })}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n            />\r\n          {errors.email?.message && (\r\n            <span className=\"font-bold text-red-600\">\r\n              {errors.email?.message}\r\n            </span>\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <span className=\"font-bold text-red-600\">Only gmail allowed</span>\r\n          )}  \r\n          </div>\r\n          <div>\r\n            <input\r\n              ref={register({ required: true })}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"password\"\r\n            />\r\n          </div>\r\n          <button className=\"bg-yellow-300 text-white\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };",{"ruleId":"20","severity":1,"message":"21","line":3,"column":10,"nodeType":"22","messageId":"23","endLine":3,"endColumn":23},"@typescript-eslint/no-unused-vars","'isLoggedInVar' is defined but never used.","Identifier","unusedVar"]